{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC1C,MAAMC,EAAOF,SAASG,eAAe,eAC/BC,EAAUJ,SAASK,cAAc,YACjCC,EAAcN,SAASK,cAAc,cAC3C,IACIE,EADAC,EAAO,EAiBXC,eAAeC,EAAaC,GACxB,MACMC,EAAS,qEAA4CD,kEAA4EH,gBAEvI,IACI,MACMK,SADiBC,MAAMC,IAAIH,IACXC,KAEtB,GAAyB,IAArBA,EAAKG,KAAKC,OAEV,YADAC,SAASC,OAAOC,QAAQ,4EAIfP,EAAKG,KAefK,SAAQC,IACX,MAAMC,EAKd,SAAyBD,GACrB,MAAMC,EAAYvB,SAASwB,cAAc,OACzCD,EAAUE,UAAUC,IAAI,cAExB,MAAMC,EAAO3B,SAASwB,cAAc,KACpCG,EAAKC,KAAON,EAAMO,cAElB,MAAMC,EAAM9B,SAASwB,cAAc,OACnCM,EAAIC,IAAMT,EAAMU,aAChBF,EAAIG,IAAMX,EAAMY,KAChBJ,EAAIK,QAAU,OAEd,MAAMC,EAAOpC,SAASwB,cAAc,OACpCY,EAAKX,UAAUC,IAAI,QAEnB,MAAMW,EAAQC,EAAkB,QAAShB,EAAMe,OACzCE,EAAQD,EAAkB,QAAShB,EAAMiB,OACzCC,EAAWF,EAAkB,WAAYhB,EAAMkB,UAC/CC,EAAYH,EAAkB,YAAahB,EAAMmB,WAWvD,OATAL,EAAKM,YAAYL,GACjBD,EAAKM,YAAYH,GACjBH,EAAKM,YAAYF,GACjBJ,EAAKM,YAAYD,GAEjBd,EAAKe,YAAYZ,GACjBP,EAAUmB,YAAYf,GACtBJ,EAAUmB,YAAYN,GAEfb,C,CAlCeoB,CAAgBrB,GAClClB,EAAQsC,YAAYnB,EAAU,IAf1BV,EAAK+B,UAAYxC,EAAQyC,SAAS5B,OAClCX,EAAYwC,MAAMC,QAAU,QAE5BzC,EAAYwC,MAAMC,QAAU,OAwDhCxC,EACAA,EAASyC,UAETzC,EAAW,IAAI0C,eAAe,aAAc,G,CAvD9C,MAAOC,GACL,MAAM,IAAIC,MAAM,gDAAiDD,E,EA2CzE,SAASZ,EAAkBc,EAAOC,GAC9B,MAAMC,EAAUtD,SAASwB,cAAc,KAGvC,OAFA8B,EAAQ7B,UAAUC,IAAI,aACtB4B,EAAQC,UAAY,MAAMH,UAAcC,IACjCC,C,CAkBX,SAASE,IACL,MAAQC,OAAQC,GAAe1D,SAC1BK,cAAc,YACdsD,kBAAkBC,wBAEvBC,OAAOC,SAAS,CACZC,IAAkB,EAAbL,EACLM,SAAU,U,CA7GlB9D,EAAKD,iBAAiB,UAAUQ,eAAgBwD,GAC5CA,EAAMC,iBACN,MAAMvD,EAAcT,EAAKS,YAAY0C,MAAMc,OAC3C,GAAoB,KAAhBxD,EAAJ,CACAP,EAAQmD,UAAY,GAEpB,UACU7C,EAAaC,GACnB6C,G,CACF,MAAON,GACLkB,QAAQlB,MAAM,gDAAiDA,E,CAP3C,C,IA4F5B5C,EAAYL,iBAAiB,SAAS,WAClCO,IAEAE,EADoBR,EAAKS,YAAY0C,MAAMc,QAE3CX,G","sources":["src/index.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n    const form = document.getElementById('search-form');\n    const gallery = document.querySelector('.gallery');\n    const loadMoreBtn = document.querySelector('.load-more');\n    let page = 1;\n    let lightbox;\n\n    form.addEventListener('submit', async function (event) {\n        event.preventDefault();\n        const searchQuery = form.searchQuery.value.trim();\n        if (searchQuery === '') return;\n        gallery.innerHTML = '';\n\n        try {\n            await searchImages(searchQuery);\n            smoothScrollToGallery();\n        } catch (error) {\n            console.error('There was a problem with the fetch operation:', error);\n        }\n    });\n\n    async function searchImages(searchQuery) {\n        const apiKey = '43689937-ac603d3a8790355bd35895aa3';\n        const apiUrl = `https://pixabay.com/api/?key=${apiKey}&q=${searchQuery}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=40`;\n\n        try {\n            const response = await axios.get(apiUrl);\n            const data = response.data;\n\n            if (data.hits.length === 0) {\n                Notiflix.Notify.Failure(\"Sorry, there are no images matching your search query. Please try again.\");\n                return;\n            }\n\n            renderImages(data.hits);\n\n            if (data.totalHits > gallery.children.length) {\n                loadMoreBtn.style.display = 'block';\n            } else {\n                loadMoreBtn.style.display = 'none';\n            }\n\n            initializeLightbox();\n        } catch (error) {\n            throw new Error('There was a problem with the fetch operation:', error);\n        }\n    }\n\n    function renderImages(images) {\n        images.forEach(image => {\n            const photoCard = createPhotoCard(image);\n            gallery.appendChild(photoCard);\n        });\n    }\n\n    function createPhotoCard(image) {\n        const photoCard = document.createElement('div');\n        photoCard.classList.add('photo-card');\n\n        const link = document.createElement('a');\n        link.href = image.largeImageURL;\n\n        const img = document.createElement('img');\n        img.src = image.webformatURL;\n        img.alt = image.tags;\n        img.loading = 'lazy';\n\n        const info = document.createElement('div');\n        info.classList.add('info');\n\n        const likes = createInfoElement('Likes', image.likes);\n        const views = createInfoElement('Views', image.views);\n        const comments = createInfoElement('Comments', image.comments);\n        const downloads = createInfoElement('Downloads', image.downloads);\n\n        info.appendChild(likes);\n        info.appendChild(views);\n        info.appendChild(comments);\n        info.appendChild(downloads);\n\n        link.appendChild(img);\n        photoCard.appendChild(link);\n        photoCard.appendChild(info);\n\n        return photoCard;\n    }\n\n    function createInfoElement(label, value) {\n        const element = document.createElement('p');\n        element.classList.add('info-item');\n        element.innerHTML = `<b>${label}:</b> ${value}`;\n        return element;\n    }\n\n    function initializeLightbox() {\n        if (lightbox) {\n            lightbox.refresh();\n        } else {\n            lightbox = new SimpleLightbox('.gallery a', {});\n        }\n    }\n\n    loadMoreBtn.addEventListener('click', function () {\n        page++;\n        const searchQuery = form.searchQuery.value.trim();\n        searchImages(searchQuery);\n        smoothScrollToGallery();\n    });\n\n    function smoothScrollToGallery() {\n        const { height: cardHeight } = document\n            .querySelector(\".gallery\")\n            .firstElementChild.getBoundingClientRect();\n\n        window.scrollBy({\n            top: cardHeight * 2,\n            behavior: \"smooth\",\n        });\n    }\n});"],"names":["document","addEventListener","form","getElementById","gallery","querySelector","loadMoreBtn","lightbox","page","async","searchImages","searchQuery","apiUrl","data","axios","get","hits","length","Notiflix","Notify","Failure","forEach","image","photoCard","createElement","classList","add","link","href","largeImageURL","img","src","webformatURL","alt","tags","loading","info","likes","createInfoElement","views","comments","downloads","appendChild","createPhotoCard","totalHits","children","style","display","refresh","SimpleLightbox","error","Error","label","value","element","innerHTML","smoothScrollToGallery","height","cardHeight","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","event","preventDefault","trim","console"],"version":3,"file":"index.b6dc1b02.js.map"}