{"mappings":"AACAA,SAASC,iBAAiB,oBAAoB,WAC1C,MAAMC,EAAOF,SAASG,eAAe,eAC/BC,EAAUJ,SAASK,cAAc,YACjCC,EAAcN,SAASK,cAAc,cAC3C,IACIE,EADAC,EAAO,EAkBXC,eAAeC,EAAaC,GACxB,MAEMC,EAAS,qEAA4CD,kEAA4EH,gBAEvI,IACI,MACMK,SADiBC,MAAMC,IAAIH,IACXC,KAEtB,GAAyB,IAArBA,EAAKG,KAAKC,OAEV,YADAC,SAASC,OAAOC,QAAQ,4EAI5BP,EAAKG,KAAKK,SAAQC,IACd,MAAMC,EAoBlB,SAAyBD,GACrB,MAAMC,EAAYvB,SAASwB,cAAc,OACzCD,EAAUE,UAAUC,IAAI,cAExB,MAAMC,EAAO3B,SAASwB,cAAc,KACpCG,EAAKC,KAAON,EAAMO,cAElB,MAAMC,EAAM9B,SAASwB,cAAc,OACnCM,EAAIC,IAAMT,EAAMU,aAChBF,EAAIG,IAAMX,EAAMY,KAChBJ,EAAIK,QAAU,OAEd,MAAMC,EAAOpC,SAASwB,cAAc,OACpCY,EAAKX,UAAUC,IAAI,QAEnB,MAAMW,EAAQrC,SAASwB,cAAc,KACrCa,EAAMZ,UAAUC,IAAI,aACpBW,EAAMC,UAAY,iBAAiBhB,EAAMe,QAEzC,MAAME,EAAQvC,SAASwB,cAAc,KACrCe,EAAMd,UAAUC,IAAI,aACpBa,EAAMD,UAAY,iBAAiBhB,EAAMiB,QAEzC,MAAMC,EAAWxC,SAASwB,cAAc,KACxCgB,EAASf,UAAUC,IAAI,aACvBc,EAASF,UAAY,oBAAoBhB,EAAMkB,WAE/C,MAAMC,EAAYzC,SAASwB,cAAc,KAazC,OAZAiB,EAAUhB,UAAUC,IAAI,aACxBe,EAAUH,UAAY,qBAAqBhB,EAAMmB,YAEjDL,EAAKM,YAAYL,GACjBD,EAAKM,YAAYH,GACjBH,EAAKM,YAAYF,GACjBJ,EAAKM,YAAYD,GAEjBd,EAAKe,YAAYZ,GACjBP,EAAUmB,YAAYf,GACtBJ,EAAUmB,YAAYN,GAEfb,C,CA5DmBoB,CAAgBrB,GAClClB,EAAQsC,YAAYnB,EAAU,IAG9BV,EAAK+B,UAAYxC,EAAQyC,SAAS5B,OAClCX,EAAYwC,MAAMC,QAAU,QAE5BzC,EAAYwC,MAAMC,QAAU,OAG5BxC,EACAA,EAASyC,UAETzC,EAAW,IAAI0C,eAAe,aAAc,G,CAElD,MAAOC,GACL,MAAM,IAAIC,MAAM,gDAAiDD,E,EA9CzEhD,EAAKD,iBAAiB,UAAUQ,eAAgB2C,GAC5CA,EAAMC,iBAEN,MAAM1C,EAAcT,EAAKS,YAAY2C,MAAMC,OAC3C,GAAoB,KAAhB5C,EAAJ,CAEAP,EAAQkC,UAAY,GAEpB,UACU5B,EAAaC,E,CACrB,MAAOuC,GACLM,QAAQN,MAAM,gDAAiDA,E,CAP3C,C,IAyF5B5C,EAAYL,iBAAiB,SAAS,WAClCO,IAEAE,EADoBR,EAAKS,YAAY2C,MAAMC,O","sources":["src/index.js"],"sourcesContent":["\ndocument.addEventListener('DOMContentLoaded', function () {\n    const form = document.getElementById('search-form');\n    const gallery = document.querySelector('.gallery');\n    const loadMoreBtn = document.querySelector('.load-more');\n    let page = 1;\n    let lightbox; \n\n    form.addEventListener('submit', async function (event) {\n        event.preventDefault();\n\n        const searchQuery = form.searchQuery.value.trim(); \n        if (searchQuery === '') return; \n\n        gallery.innerHTML = '';\n\n        try {\n            await searchImages(searchQuery); \n        } catch (error) {\n            console.error('There was a problem with the fetch operation:', error);\n        }\n    });\n\n    async function searchImages(searchQuery) {\n        const apiKey = '43689937-ac603d3a8790355bd35895aa3';\n\n        const apiUrl = `https://pixabay.com/api/?key=${apiKey}&q=${searchQuery}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=40`;\n\n        try {\n            const response = await axios.get(apiUrl);\n            const data = response.data;\n\n            if (data.hits.length === 0) {\n                Notiflix.Notify.Failure(\"Sorry, there are no images matching your search query. Please try again.\");\n                return;\n            }\n\n            data.hits.forEach(image => {\n                const photoCard = createPhotoCard(image); \n                gallery.appendChild(photoCard); \n            });\n\n            if (data.totalHits > gallery.children.length) {\n                loadMoreBtn.style.display = 'block';\n            } else {\n                loadMoreBtn.style.display = 'none';\n            }\n\n            if (lightbox) {\n                lightbox.refresh();\n            } else {\n                lightbox = new SimpleLightbox('.gallery a', {});\n            }\n        } catch (error) {\n            throw new Error('There was a problem with the fetch operation:', error);\n        }\n    }\n\n    function createPhotoCard(image) {\n        const photoCard = document.createElement('div');\n        photoCard.classList.add('photo-card');\n\n        const link = document.createElement('a');\n        link.href = image.largeImageURL;\n\n        const img = document.createElement('img');\n        img.src = image.webformatURL;\n        img.alt = image.tags;\n        img.loading = 'lazy';\n\n        const info = document.createElement('div');\n        info.classList.add('info');\n\n        const likes = document.createElement('p');\n        likes.classList.add('info-item');\n        likes.innerHTML = `<b>Likes:</b> ${image.likes}`;\n\n        const views = document.createElement('p');\n        views.classList.add('info-item');\n        views.innerHTML = `<b>Views:</b> ${image.views}`;\n\n        const comments = document.createElement('p');\n        comments.classList.add('info-item');\n        comments.innerHTML = `<b>Comments:</b> ${image.comments}`;\n\n        const downloads = document.createElement('p');\n        downloads.classList.add('info-item');\n        downloads.innerHTML = `<b>Downloads:</b> ${image.downloads}`;\n\n        info.appendChild(likes);\n        info.appendChild(views);\n        info.appendChild(comments);\n        info.appendChild(downloads);\n\n        link.appendChild(img);\n        photoCard.appendChild(link);\n        photoCard.appendChild(info);\n\n        return photoCard;\n    }\n\n    loadMoreBtn.addEventListener('click', function () {\n        page++;\n        const searchQuery = form.searchQuery.value.trim(); \n        searchImages(searchQuery);\n    });\n});"],"names":["document","addEventListener","form","getElementById","gallery","querySelector","loadMoreBtn","lightbox","page","async","searchImages","searchQuery","apiUrl","data","axios","get","hits","length","Notiflix","Notify","Failure","forEach","image","photoCard","createElement","classList","add","link","href","largeImageURL","img","src","webformatURL","alt","tags","loading","info","likes","innerHTML","views","comments","downloads","appendChild","createPhotoCard","totalHits","children","style","display","refresh","SimpleLightbox","error","Error","event","preventDefault","value","trim","console"],"version":3,"file":"index.56d096f3.js.map"}